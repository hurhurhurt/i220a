==6771== Memcheck, a memory error detector
==6771== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==6771== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==6771== Command: ./big-bits
==6771== Parent PID: 3856
==6771== 
==6771== Invalid read of size 1
==6771==    at 0x10A16E: xorBigBits (big-bits.c:151)
==6771==    by 0x10966B: doOp (main.c:142)
==6771==    by 0x10995B: doLine (main.c:214)
==6771==    by 0x109C48: go (main.c:285)
==6771==    by 0x109CE0: main (main.c:300)
==6771==  Address 0x4a41b54 is 0 bytes after a block of size 20 alloc'd
==6771==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==6771==    by 0x109D59: newBigBits (big-bits.c:39)
==6771==    by 0x1098A5: doLine (main.c:195)
==6771==    by 0x109C48: go (main.c:285)
==6771==    by 0x109CE0: main (main.c:300)
==6771== 
==6771== Invalid read of size 1
==6771==    at 0x4838CD4: __strlen_sse2 (vg_replace_strmem.c:462)
==6771==    by 0x1099F0: outHexString (main.c:235)
==6771==    by 0x109B1B: outResults (main.c:260)
==6771==    by 0x109C5B: go (main.c:286)
==6771==    by 0x109CE0: main (main.c:300)
==6771==  Address 0x4a41f03 is 0 bytes after a block of size 35 alloc'd
==6771==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==6771==    by 0x109E23: stringBigBits (big-bits.c:70)
==6771==    by 0x109AC3: outResults (main.c:254)
==6771==    by 0x109C5B: go (main.c:286)
==6771==    by 0x109CE0: main (main.c:300)
==6771== 
==6771== Invalid read of size 1
==6771==    at 0x10A06B: orBigBits (big-bits.c:125)
==6771==    by 0x10966B: doOp (main.c:142)
==6771==    by 0x109900: doLine (main.c:206)
==6771==    by 0x109C48: go (main.c:285)
==6771==    by 0x109CE0: main (main.c:300)
==6771==  Address 0x4a42c04 is 0 bytes after a block of size 20 alloc'd
==6771==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==6771==    by 0x109D59: newBigBits (big-bits.c:39)
==6771==    by 0x1098A5: doLine (main.c:195)
==6771==    by 0x109C48: go (main.c:285)
==6771==    by 0x109CE0: main (main.c:300)
==6771== 
==6771== 
==6771== HEAP SUMMARY:
==6771==     in use at exit: 10,325 bytes in 36 blocks
==6771==   total heap usage: 43 allocs, 7 frees, 19,813 bytes allocated
==6771== 
==6771== LEAK SUMMARY:
==6771==    definitely lost: 8,293 bytes in 20 blocks
==6771==    indirectly lost: 2,032 bytes in 16 blocks
==6771==      possibly lost: 0 bytes in 0 blocks
==6771==    still reachable: 0 bytes in 0 blocks
==6771==         suppressed: 0 bytes in 0 blocks
==6771== Rerun with --leak-check=full to see details of leaked memory
==6771== 
==6771== For counts of detected and suppressed errors, rerun with: -v
==6771== ERROR SUMMARY: 106 errors from 3 contexts (suppressed: 0 from 0)
